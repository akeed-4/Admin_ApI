// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WaseetAPI.Database;

namespace WaseetAPI.Database.Migrations
{
    [DbContext(typeof(MainDbContext))]
    partial class MainDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WaseetAPI.Domain.Models.Admin", b =>
                {
                    b.Property<int?>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("activation_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("company_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("is_admin")
                        .HasColumnType("bit");

                    b.Property<bool?>("logged")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("logged_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("user_online_type")
                        .HasColumnType("int");

                    b.HasKey("user_id");

                    b.HasIndex("company_id");

                    b.ToTable("admins");
                });

            modelBuilder.Entity("WaseetAPI.Domain.Models.Companies", b =>
                {
                    b.Property<string>("company_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("db_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("is_own_database")
                        .HasColumnType("int");

                    b.Property<string>("server_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("server_password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("server_user_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("company_id");

                    b.ToTable("companies");
                });

            modelBuilder.Entity("WaseetAPI.Domain.Models.Logs", b =>
                {
                    b.Property<decimal?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("msg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("msg_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("msg_type")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("logs");
                });

            modelBuilder.Entity("WaseetAPI.Domain.Models.Salla.SallaWebhookRequests", b =>
                {
                    b.Property<decimal?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("event_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("event_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("salla_user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("sallawebhookrequests");
                });

            modelBuilder.Entity("WaseetAPI.Domain.Models.SallaMerchantApp", b =>
                {
                    b.Property<decimal?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("merchant_id")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("app_name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id", "merchant_id", "app_name");

                    b.ToTable("sallamerchantapp");
                });

            modelBuilder.Entity("WaseetAPI.Domain.Models.SallaUsers", b =>
                {
                    b.Property<int?>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("activation_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("company_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("user_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("user_online_type")
                        .HasColumnType("int");

                    b.HasKey("user_id");

                    b.HasIndex("company_id");

                    b.ToTable("sallausers");
                });

            modelBuilder.Entity("WaseetAPI.Domain.Models.Users", b =>
                {
                    b.Property<int?>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("activation_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("company_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("is_admin")
                        .HasColumnType("bit");

                    b.Property<bool?>("logged")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("logged_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("user_online_type")
                        .HasColumnType("int");

                    b.HasKey("user_id");

                    b.HasIndex("company_id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("WaseetAPI.Domain.Models.Admin", b =>
                {
                    b.HasOne("WaseetAPI.Domain.Models.Companies", "company")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.Navigation("company");
                });

            modelBuilder.Entity("WaseetAPI.Domain.Models.SallaUsers", b =>
                {
                    b.HasOne("WaseetAPI.Domain.Models.Companies", "company")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.Navigation("company");
                });

            modelBuilder.Entity("WaseetAPI.Domain.Models.Users", b =>
                {
                    b.HasOne("WaseetAPI.Domain.Models.Companies", "company")
                        .WithMany("users")
                        .HasForeignKey("company_id");

                    b.Navigation("company");
                });

            modelBuilder.Entity("WaseetAPI.Domain.Models.Companies", b =>
                {
                    b.Navigation("users");
                });
#pragma warning restore 612, 618
        }
    }
}
